{"version":3,"sources":["components/Navbar.js","components/HeroSection.js","components/CardItem.js","components/Card.js","components/Footer.js","components/pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useState","click","setClick","className","to","onClick","HeroSection","src","autoPlay","loop","muted","CardItem","props","path","data-category","label","alt","text","Card","Footer","href","aria-label","Home","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yTAkCeA,G,MA7BA,WAAO,IAAD,EACSC,oBAAS,GADlB,mBACVC,EADU,KACHC,EADG,KAKjB,OACI,oCACA,yBAAKC,UAAY,UACb,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAAMC,GAAK,IAAID,UAAY,cAAcE,QAN7B,kBAAMH,GAAS,KAM3B,UAGA,yBAAKC,UAAU,YAAYE,QAVnB,kBAAMH,GAAUD,KAW5B,uBAAGE,UAAWF,EAAQ,eAAiB,sB,OCFpCK,G,YAXK,WAChB,OACI,yBAAKH,UAAW,kBACZ,2BAAOI,IAAM,sBAAsBC,UAAQ,EAACC,MAAI,EAACC,OAAK,IACtD,qDCeGC,MArBf,SAAkBC,GAChB,OACE,oCACE,wBAAIT,UAAU,eACZ,kBAAC,IAAD,CAAMA,UAAU,oBAAoBC,GAAIQ,EAAMC,MAC5C,4BAAQV,UAAU,wBAAwBW,gBAAeF,EAAMG,OAC7D,yBACEZ,UAAU,mBACVa,IAAI,eACJT,IAAKK,EAAML,OAGf,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,qBAAqBS,EAAMK,WCetCC,G,MA1BF,WACT,OACI,yBAAKf,UAAY,SACb,2CACA,yBAAKA,UAAY,mBACjB,yBAAKA,UAAU,kBACf,wBAAIA,UAAU,gBACd,kBAAC,EAAD,CACEI,IAAI,eACJU,KAAK,qFACLF,MAAM,YACNF,KAAK,MAEP,kBAAC,EAAD,CACEN,IAAI,iBACJU,KAAK,iGACLF,MAAM,YACNF,KAAK,YCaJM,G,MA9BA,WACX,OACI,6BAAShB,UAAU,gBACnB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAvB,WAIF,2BAAOA,UAAU,kBAAjB,oBACA,yBAAKA,UAAU,gBACb,uBAAGiB,KAAO,sDACRjB,UAAU,4BACVkB,aAAW,YAEX,uBAAGlB,UAAU,qBAEf,uBAAGiB,KAAO,oCACRjB,UAAU,0BACVkB,aAAW,UAEX,uBAAGlB,UAAU,wBCTZmB,EAVF,WACT,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCWGC,MAbf,WACE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOV,KAAO,IAAIW,OAAK,EAACC,UAAaH,QCJ3BI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.009623b2.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport { Link } from 'react-router-dom';\nimport './Navbar.css'\n\nconst Navbar = () => {\n    const [click, setClick] = useState(false);\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    return (\n        <>\n        <nav className = 'navbar'>\n            <div className='navbar-container'>\n                <Link to = '/' className = 'navbar-logo' onClick={closeMobileMenu}>\n                    Shelly\n                </Link>\n                <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          {/* <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            <li className='nav-item'>\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n            \n          </ul> */}\n            </div>\n        </nav>\n        </>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport '../App.css';\n\nimport './HeroSection.css';\n\nconst HeroSection = () => {\n    return (\n        <div className= 'hero-container'>\n            <video src = '/videos/video-1.mp4' autoPlay loop muted /> \n            <h1>\n                Welcome to my page\n            </h1>\n        </div>\n    )\n}\n\nexport default HeroSection","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction CardItem(props) {\n  return (\n    <>\n      <li className='cards__item'>\n        <Link className='cards__item__link' to={props.path}>\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\n            <img \n              className='cards__item__img'\n              alt='Travel Image'\n              src={props.src}\n            />\n          </figure>\n          <div className='cards__item__info'>\n            <h5 className='cards__item__text'>{props.text}</h5>\n          </div>\n        </Link>\n      </li>\n    </>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\nimport CardItem from './CardItem'\nimport './Card.css';\n\n\nconst Card = () => {\n    return (\n        <div className = 'cards'>\n            <h1> Portfolio </h1>\n            <div className = 'card-_container'>\n            <div className='cards__wrapper'>\n            <ul className='cards__items'>\n            <CardItem\n              src='/img/img.png'\n              text='Project Bite-Wallet, deploying a stock website that use JavaScript, html and css. '\n              label='Project 1'\n              path='/'\n            />\n            <CardItem\n              src='/img/Ranch.png'\n              text='A project using Node, Express and Sequelize to deploy a website that is used by horse ranches.'\n              label='Project 2'\n              path='/'\n            />\n          </ul>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react';\nimport './Footer.css';\nimport { Link } from 'react-router-dom';\n\n\nconst Footer = () => {\n    return (\n        <section className='social-media'>\n        <div className='social-media-wrap'>\n          <div className='footer-logo'>\n            <Link to='/' className='social-logo'>\n              Shelly\n            </Link>\n          </div>\n          <small className='website-rights'>Shelly Â© 2020</small>\n          <div className='social-icons'>\n            <a href = 'https://www.linkedin.com/in/trang-nguyen-518a4b159/'\n              className='social-icon-link Linkedin'\n              aria-label='Linkedin'\n            >\n              <i className='fab fa-linkedin' />\n            </a>\n            <a href = 'https://github.com/ShellyNguyen98'\n              className='social-icon-link Github'\n              aria-label='Github'\n            >\n              <i className='fab fa-github' />\n            </a>\n            </div>\n            </div>\n            </section>\n    \n    )\n}\n\nexport default Footer","import React from 'react';\nimport HeroSection from '../HeroSection'\nimport Card from '../Card'\nimport Footer from '../Footer'\n\n\n\nconst Home = () => {\n    return (\n        <>\n            <HeroSection />\n            <Card />\n            <Footer />\n        </>\n    )\n}\n\nexport default Home","import React from 'react';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport Home from './components/pages/Home'\n\n\n\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path = '/' exact component = {Home} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}